name: Build

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for version detection

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pdm sync -d -G test

      - name: Run Nox
        run: |
          pdm run nox

      - name: Build package
        if: success()
        run: |
          pdm build

      - name: Verify build artifacts
        if: success()
        run: |
          ls -la dist/
          echo "=== Wheel files ==="
          find dist/ -name "*.whl" -exec basename {} \;
          echo "=== Source distribution files ==="
          find dist/ -name "*.tar.gz" -exec basename {} \;

      - name: Check package integrity
        if: success()
        run: |
          python -m pip install --upgrade pip twine
          twine check dist/*

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: python-package-${{ github.sha }}-${{ matrix.python-version }}
          path: |
            dist/*.whl
            dist/*.tar.gz
          retention-days: 90
          compression-level: 6

      - name: Create build summary
        if: success()
        run: |
          echo "## Build Summary 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Python Version:** ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Status:** ✅ Success" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts Generated:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          for file in dist/*; do
            if [[ -f "$file" ]]; then
              filename=$(basename "$file")
              size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo "unknown")
              echo "- \`$filename\` (${size} bytes)" >> $GITHUB_STEP_SUMMARY
            fi
          done

      - name: Report build failure
        if: failure()
        run: |
          echo "## Build Failed ❌" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Python Version:** ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Status:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the workflow logs for details on the failure." >> $GITHUB_STEP_SUMMARY
